2023.02.25 프로젝트 시작
작업환경 : AWS EC2 ubuntu 및 로컬 window
템플릿 : intelliJ, MobaXterm, vscode
작업툴 : mysql, jpa, java & spring, react, javascript, docker, aws etc ...

1일차
- react 프로젝트 생성
- proxy 설정 8080(spring) - 3000(react)
- gradle 빌드 방식으로 spring boot를 통하여 spring project 생성
- spring controller 제작 및 8080 호스팅 띄우는 작업 완료, 3000번과 연결된 것도 확인

2일차
- 백엔드 배포 명령어 추가 : bash /home/ubuntu/seungchan/deploy.sh
- spring gradle 빌드시 react 또한 같이 빌드되게끔 설정 추가

3일차
- docker-compose 설치 및 일부 배포환경 compose로 추가 설정 작업
- docker volume 설정을 통한 코드 수정시 실시간 서버 반영 시도(도커 말고 기본 로컬 환경에서도 실시간이 되어야할거같긴함)
=> 결국 실패로 돌아감, 아마 우분투로 이미지를 깔고 apt로 자바, 노드를 설치하는 방식으로 갈아엎어야할거같음, 애초에 도커가 개발환경의 목적이 아닌만큼
안돼도 크게 상관없을듯함
- 스프링 코드 수정시 실시간 서버 반영 시도 
=> intelliJ에서는 된다고 하는데 우분투에서 프로그램안쓰고는 안되는듯함, 추가적으로 시도해볼 예정

4일차
- intellJ 프로그램 설정을 통하여 스프링 코드 수정시 실시간 서버 반영 성공

5일차
- tomcat 8080 서버에서 react url mapping이 되지 않는 현상 발생
=> spring에 router 설정을 통하여 "v/" url segment가 앞에 붙으면 react로 라우팅 되게끔 설정하여 해결
- mysql/jpa spring 환경 설정을 통하여 연동 및 데이터베이스에 table 개설 로직 추가
- react에 header, login modal 등 웹 퍼블리싱 작업 추가
- react에 axios 통신 모듈을 이용하여 8080서버와 로그인 Req & res 성공

6일차
- 해야할일 : 스프링에서 리액트 라우팅한 지점에 백엔드 & 프론트가 동시에 라우팅이 가능한지 점검
- querystring이 spring에서 받아 지는지 점검


